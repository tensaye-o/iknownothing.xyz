(()=>{let a=[],e="";a=["/index.html","/apple-touch-icon.c01138b4.png","/favicon-32x32.2e94acaf.png","/favicon-16x16.2e12dc9f.png","/site.webmanifest","/android-chrome-192x192.f1de1cb4.png","/android-chrome-256x256.5767cc7f.png","/icon-512x512.a77e75db.png","/safari-pinned-tab.a6149b94.svg","/tesseract/index.html","/tesseract/index.d57791dd.css","/tesseract/index.0c7ea77b.js","/avatar-264x264.835e93f7.png","/index.fea6008e.css","/bg-132x132.f4551dd6.png","/index.1502b09b.js"],e="14aa5d7c",addEventListener("install",(t=>t.waitUntil(async function(){const t=await caches.open(e);await t.addAll(a)}()))),addEventListener("activate",(a=>a.waitUntil(async function(){const a=await caches.keys();await Promise.all(a.map((a=>a!==e&&caches.delete(a))))}()))),addEventListener("fetch",(a=>a.respondWith(async function(a){const t=await caches.match(a.request);if(!navigator.onLine)return t;try{const t=await fetch(a.request),c=await caches.open(e);return await c.put(a.request,t.clone()),t}catch(a){alert(a)}}(a))))})();
//# sourceMappingURL=service-worker.js.map
